<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>QeePHP/FleaPHP 开源开发框架 - 起源科技开源社区|中国领先的 PHP 开源解决方案提供商</title>
<link rel="shortcut icon" href="/favicon.ico">
<link rel="stylesheet" type="text/css" href="base.css" tppabs="http://qeephp.com/qeephp/base.css" />
<link rel="stylesheet" type="text/css" href="jquery-ui-081120.css" tppabs="http://qeephp.com/qeephp/jquery-ui-081120.css" />
<script type="text/javascript" src="jquery-1.2.6.min.js" tppabs="http://qeephp.com/js/jquery-1.2.6.min.js"></script>
<script type="text/javascript" src="jquery-ui-1.5.3-081202.min.js" tppabs="http://qeephp.com/qeephp/jquery-ui-1.5.3-081202.min.js"></script>
<script type="text/javascript">
$(document).ready(function() {
});
</script>
</head>
<body>

<div id="page-wrapper">

<!-- header -->
<div id="header">
  <div class="container clearfix">
    <div id="header_nav">
      <ul id="navigation">
        <li class="first"><a href="projects.htm" tppabs="http://qeephp.com/projects">开源项目与插件</a></li>
        <li><a href="cases.htm" tppabs="http://qeephp.com/cases">应用展示</a></li>
        <li><a href="framework.htm" tppabs="http://qeephp.com/framework">框架</a></li>
        <li><a href="docs.htm" tppabs="http://qeephp.com/docs">文档</a></li>
	  </ul>
    </div>
  </div>
</div>
<!-- /header -->


<!-- core -->
<div id="core" class="clearfix">
  <div class="container clearfix">

    

    <!-- 整页 -->

    <div id="fullpage" class="contents">

      
<div class="guide-section">

  <div class="guide-header">
    <span class="nav">
      <a href="index-4.htm" tppabs="http://qeephp.com/docs/">文档索引</a>
      &raquo;
      <a href="index-5.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/">QeePHP 快速入门</a>
      &raquo;
      <a href="node-04thinking.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-04thinking">编写代码之前的思考</a>
      &raquo;
      创建需要的模型    </span>
  </div>

  <div class="guide-section">
    <div class="guide-sidebar">
      
<h2>目录</h2>


<h3><a href="node-01start.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-01start">起步</a></h3>


<ul>
    <li>
    <a href="node-01start-environment.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-01start-environment" subject="准备开发环境">准备开发环境</a>
  </li>
    <li>
    <a href="node-01start-creating-app.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-01start-creating-app" subject="创建应用程序">创建应用程序</a>
  </li>
    <li>
    <a href="node-01start-dirstructure.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-01start-dirstructure" subject="目录结构">目录结构</a>
  </li>
    <li>
    <a href="node-01start-mvc.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-01start-mvc" subject="MVC 模式">MVC 模式</a>
  </li>
    <li>
    <a href="node-01start-mvc-startup.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-01start-mvc-startup" subject="MVC 模式的启动">MVC 模式的启动</a>
  </li>
    <li>
    <a href="node-01start-mvc-controller.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-01start-mvc-controller" subject="控制器">控制器</a>
  </li>
  
</ul>



<h3><a href="node-02development.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-02development">开始开发</a></h3>


<ul>
    <li>
    <a href="node-02development-database.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-02development-database" subject="创建数据库">创建数据库</a>
  </li>
    <li>
    <a href="node-02development-yaml.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-02development-yaml" subject="YAML 入门">YAML 入门</a>
  </li>
    <li>
    <a href="node-02development-configs.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-02development-configs" subject="修改配置文件">修改配置文件</a>
  </li>
  
</ul>



<h3><a href="node-03automation.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-03automation">使用自动化工具</a></h3>


<ul>
    <li>
    <a href="node-03automation-controller.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-03automation-controller" subject="创建控制器">创建控制器</a>
  </li>
    <li>
    <a href="node-03automation-model.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-03automation-model" subject="创建模型">创建模型</a>
  </li>
  
</ul>



<h3><a href="node-04thinking.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-04thinking">编写代码之前的思考</a></h3>


<ul>
    <li>
    <a href="node-04thinking-oo.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-04thinking-oo" subject="用对象来思考">用对象来思考</a>
  </li>
    <li>
    <a href="node-04thinking-analysis.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-04thinking-analysis" subject="需求分析">需求分析</a>
  </li>
    <li>
    <a href="node-04thinking-creating-models.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-04thinking-creating-models" subject="创建需要的模型">创建需要的模型</a>
  </li>
  
</ul>



<h3><a href="node-05users.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-05users">实现用户功能</a></h3>


<ul>
    <li>
    <a href="node-05users-register-ui.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-05users-register-ui" subject="用户注册（用户界面）">用户注册（用户界面）</a>
  </li>
    <li>
    <a href="node-05users-register-model.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-05users-register-model" subject="用户注册（完善模型）">用户注册（完善模型）</a>
  </li>
    <li>
    <a href="node-05users-register-code.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-05users-register-code" subject="用户注册（功能实现）">用户注册（功能实现）</a>
  </li>
    <li>
    <a href="node-05users-login.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-05users-login" subject="用户登录和注销">用户登录和注销</a>
  </li>
    <li>
    <a href="node-05users-change-passwd.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-05users-change-passwd" subject="修改密码">修改密码</a>
  </li>
  
</ul>



<h3><a href="node-06acl.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-06acl">访问控制</a></h3>


<ul>
    <li>
    <a href="node-06acl-why.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-06acl-why" subject="为什么要使用访问控制">为什么要使用访问控制</a>
  </li>
    <li>
    <a href="node-06acl-do.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-06acl-do" subject="实现访问控制">实现访问控制</a>
  </li>
  
</ul>



<h3><a href="node-07tasks.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-07tasks">实现任务管理</a></h3>


<ul>
    <li>
    <a href="node-07tasks-add.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-07tasks-add" subject="添加任务">添加任务</a>
  </li>
    <li>
    <a href="node-07tasks-edit.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-07tasks-edit" subject="修改和删除任务">修改和删除任务</a>
  </li>
    <li>
    <a href="node-07tasks-pagination.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-07tasks-pagination" subject="分页与最后的完善">分页与最后的完善</a>
  </li>
  
</ul>



<h3><a href="node-08routes.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-08routes">美化 URL</a></h3>


<ul>
    <li>
    <a href="node-08routes-router.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-08routes-router" subject="URL 路由是什么">URL 路由是什么</a>
  </li>
    <li>
    <a href="node-08routes-configs.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-08routes-configs" subject="启用 URL 路由">启用 URL 路由</a>
  </li>
    <li>
    <a href="node-08routes-rules.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-08routes-rules" subject="添加路由规则">添加路由规则</a>
  </li>
  
</ul>



<h3><a href="node-09review.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-09review">回顾</a></h3>


<ul>
    <li>
    <a href="node-09review-readmore.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-09review-readmore" subject="教程没有涉及的内容">教程没有涉及的内容</a>
  </li>
    <li>
    <a href="node-09review-improve.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-09review-improve" subject="进一步的改进">进一步的改进</a>
  </li>
  
</ul>



    </div>

    <div class="guide-contents formatted">
      
<h1>创建需要的模型</h1>

<p>确定了模型的属性和行为，就可以创建模型了。</p>

<h2>创建存储模型的数据表</h2>

<p>模型在程序中都是用一个类来表现的，然后通过添加方法和属性来定义出完整的模型。但如果模型需要保存到数据库，那么数据库中就必须有保存该模型需要的数据表。</p>

<p>虽然没有强制要求，但大多数情况下，模型的属性和数据表的字段是一一对应的：</p>

<table>
	<thead>
		<tr>
			<th colspan="2">user 模型属性对应的数据表字段</th>
		</tr>
	</thead>

	<tbody>
		<tr>
			<th>user_id</th>

			<td>user_id INT</td>
		</tr>

		<tr>
			<th>username</th>

			<td>username VARCHAR</td>
		</tr>

		<tr>
			<th>password</th>

			<td>password VARCHAR</td>
		</tr>
	</tbody>
</table>

<table>
	<thead>
		<tr>
			<th colspan="2">task 模型属性对应的数据表字段</th>
		</tr>
	</thead>

	<tbody>
		<tr>
			<th>task_id</th>

			<td>task_id INT</td>
		</tr>

		<tr>
			<th>subject</th>

			<td>subject VARCHAR</td>
		</tr>

		<tr>
			<th>description</th>

			<td>description TEXT</td>
		</tr>

		<tr>
			<th>created</th>

			<td>created INT</td>
		</tr>

		<tr>
			<th>is_completed</th>

			<td>is_completed BOOL</td>
		</tr>
	</tbody>
</table>

<blockquote>
	<p>这种一一对应可以减少许多麻烦，提高开发效率，这也是“契约式编程”概念的一部分。</p>
</blockquote>

<p>注意上表中，我们为 task 和 user 模型分别添加了 task_id 和
user_id
两个属性。这两个属性会被设置为数据表的主键。主键让数据库和应用程序可以更容易更快速的查找保存的对象，因此对于绝大多数模型，我们都需要添加一个单独的主键。</p>

<h2>ORM 的作用</h2>

<p>不过上表列出的字段是不完整的。因为 user 模型和 task
模型之间的关系并没有体现出来。这就是“对象与关系式数据库之间的阻抗不匹配”问题。</p>

<blockquote>
	<p>对象与关系式数据库之间的阻抗不匹配问题，根源在于关系式数据库没有办法直接保存对象与对象之间的关系。例如一个用户有多个任务，在面向对象体系中就是“用户”对象聚合了多个“任务”对象，而关系式数据库不支持这样的表述方式。</p>

	<p>所以在关系式数据库中存储对象间的关系需要特别的方法，并且需要
	ORM 系统来提供帮助。看到这里，就应该明白
	ORM（Object-relational mapping ——
	对象关系映射）的真正含义了。</p>
</blockquote>

<p>例如“用户”和“任务”关联，而“任务”和“任务评论”关联，“任务评论”和“评论人”关联。在这些关联对象间导航应该是很自然和简单的事情：</p>

<pre class="php code"><span
class="co1">// 开始遍历用户的所有任务</span>
<span
class="co1">// $users-&gt;tasks 是包含多个 Task 对象的集合</span>
<span
class="kw1">foreach</span> <span class="br0">&#40;</span><span
class="re0">$user</span><span class="sy0">-&gt;</span><span
class="me1">tasks</span> <span class="kw1">as</span> <span
class="re0">$task</span><span class="br0">&#41;</span>
<span
class="br0">&#123;</span>
    <span class="kw3">echo</span> <span
class="st0">&quot;任务主题：<span
class="es4">{$task-&gt;subject}</span><span
class="es1">\n</span>&quot;</span><span class="sy0">;</span>
&nbsp;
    <span
class="co1">// 遍历任务的所有评论</span>
    <span
class="co1">// $task-&gt;comments 是包含多个 Comment 对象的集合</span>
    <span
class="kw1">foreach</span> <span class="br0">&#40;</span><span
class="re0">$task</span><span class="sy0">-&gt;</span><span
class="me1">comments</span> <span class="kw1">as</span> <span
class="re0">$comment</span><span class="br0">&#41;</span>
    <span
class="br0">&#123;</span>
        <span class="kw3">echo</span> <span
class="st0">&quot;评论人：<span
class="es4">{$comment-&gt;author-&gt;username}</span><span
class="es1">\n</span>&quot;</span><span class="sy0">;</span>
    <span
class="br0">&#125;</span>
<span class="br0">&#125;</span></pre>

<p>上述代码中，从 user 对象的 tasks 属性可以访问到聚合的
task 对象。而从 task 对象的 comments
属性又可以访问到任务的所有评论，再通过
$comment-&gt;author-&gt;username 访问评论人的用户名。</p>

<p>作为一个出色的
ORM，不但要能够支持多种关联关系，以及对象间的泛化和依赖，还应该让开发者可以在对象关系网间自由的导航。正是这种顺畅的对象导航，让领域驱动开发变得更加简单。开发者不需要操心如何维护对象间的关系，要做的仅仅是将对象间的关系定义出来。只要定义好关系，我们就可以通过直观的代码在对象间进行游历。</p>

<p>QeePHP
支持四种关联关系，分别是“一对一”、“一对多”、“多对多”和“从属”关联关系。为了便于描述，每一个关联关系的两端分别称为“来源对象”和“目标对象”，如下图：</p>

<div class="figure"><img
src="thinking-creating-models-01.png" tppabs="http://qeephp.com/upload/docs/qeephp-quickstart/images/thinking-creating-models-01.png"
alt="" />
	<p>线段的起点是来源对象，箭头所指是目标对象</p>
</div>

<p>这四种关系在关系式数据库中的表示方式分别是：</p>

<table>
	<thead>
		<tr>
			<th>关联关系</th>

			<th>来源对象的外键字段</th>

			<th>目标对象的外键字段</th>
		</tr>
	</thead>

	<tbody>
		<tr>
			<td>一对一</td>

			<td>无</td>

			<td>来源对象的主键</td>
		</tr>

		<tr>
			<td>一对多</td>

			<td>无</td>

			<td>来源对象的主键</td>
		</tr>

		<tr>
			<td>多对多</td>

			<td>无</td>

			<td>无</td>
		</tr>

		<tr>
			<td>从属</td>

			<td>目标对象的主键</td>

			<td>无</td>
		</tr>
	</tbody>
</table>

<p>在上述四种关联关系中，“一对一”、“一对多”和“从属”实际上是相反的关系。而“多对多”关联关系必须依赖一个单独的数据表来存储，这个表称为“中间表”。关于“多对多”的问题，我们稍后再来阐述。</p>

<h2>创建数据表和模型</h2>

<p>根据“用户”和“任务”间的关联关系，我们需要为 task
模型的数据表添加一个 owner_id
字段，用于保存“用户”模型的主键值。最终两个数据表如下图：</p>

<div class="figure"><img
src="thinking-creating-models-02.png" tppabs="http://qeephp.com/upload/docs/qeephp-quickstart/images/thinking-creating-models-02.png"
alt="" />
	<p>保存 task 和 user 模型的数据表</p>
</div>

<p>上述数据表转换为 MySQL 数据库的 DDL 就是：</p>

<pre class="sql code"><span class="kw1">CREATE</span> <span
class="kw1">TABLE</span> <span class="st0">`tasks`</span> <span
class="br0">&#40;</span>
  <span class="st0">`task_id`</span> int<span
class="br0">&#40;</span><span class="nu0">11</span><span
class="br0">&#41;</span> <span class="kw1">NOT</span> <span
class="kw1">NULL</span> <span class="kw1">AUTO_INCREMENT</span><span
class="sy0">,</span>
  <span class="st0">`subject`</span> varchar<span
class="br0">&#40;</span><span class="nu0">200</span><span
class="br0">&#41;</span> <span class="kw1">NOT</span> <span
class="kw1">NULL</span><span class="sy0">,</span>
  <span
class="st0">`description`</span> text<span class="sy0">,</span>
  <span
class="st0">`created`</span> int<span class="br0">&#40;</span><span
class="nu0">11</span><span class="br0">&#41;</span> <span
class="kw1">NOT</span> <span class="kw1">NULL</span><span
class="sy0">,</span>
  <span class="st0">`updated`</span> int<span
class="br0">&#40;</span><span class="nu0">11</span><span
class="br0">&#41;</span> <span class="kw1">NOT</span> <span
class="kw1">NULL</span><span class="sy0">,</span>
  <span
class="st0">`is_completed`</span> tinyint<span class="br0">&#40;</span><span
class="nu0">1</span><span class="br0">&#41;</span> <span
class="kw1">NOT</span> <span class="kw1">NULL</span><span
class="sy0">,</span>
  <span class="st0">`completed_at`</span> int<span
class="br0">&#40;</span><span class="nu0">11</span><span
class="br0">&#41;</span> <span class="kw1">DEFAULT</span> <span
class="kw1">NULL</span><span class="sy0">,</span>
  <span
class="st0">`owner_id`</span> int<span class="br0">&#40;</span><span
class="nu0">11</span><span class="br0">&#41;</span> <span
class="kw1">NOT</span> <span class="kw1">NULL</span><span
class="sy0">,</span>
  <span class="kw1">PRIMARY</span> <span
class="kw1">KEY</span>  <span class="br0">&#40;</span><span
class="st0">`task_id`</span><span class="br0">&#41;</span><span
class="sy0">,</span>
  <span class="kw1">KEY</span> <span
class="st0">`owner_id`</span> <span class="br0">&#40;</span><span
class="st0">`owner_id`</span><span class="br0">&#41;</span>
<span
class="br0">&#41;</span>;
&nbsp;
&nbsp;
<span class="kw1">CREATE</span> <span
class="kw1">TABLE</span> <span class="st0">`users`</span> <span
class="br0">&#40;</span>
  <span class="st0">`user_id`</span> int<span
class="br0">&#40;</span><span class="nu0">11</span><span
class="br0">&#41;</span> <span class="kw1">NOT</span> <span
class="kw1">NULL</span> <span class="kw1">AUTO_INCREMENT</span><span
class="sy0">,</span>
  <span class="st0">`username`</span> varchar<span
class="br0">&#40;</span><span class="nu0">20</span><span
class="br0">&#41;</span> <span class="kw1">NOT</span> <span
class="kw1">NULL</span><span class="sy0">,</span>
  <span
class="st0">`password`</span> varchar<span class="br0">&#40;</span><span
class="nu0">80</span><span class="br0">&#41;</span> <span
class="kw1">NOT</span> <span class="kw1">NULL</span><span
class="sy0">,</span>
  <span class="kw1">PRIMARY</span> <span
class="kw1">KEY</span>  <span class="br0">&#40;</span><span
class="st0">`user_id`</span><span class="br0">&#41;</span><span
class="sy0">,</span>
  <span class="kw1">UNIQUE</span> <span
class="kw1">KEY</span> <span class="st0">`username`</span> <span
class="br0">&#40;</span><span class="st0">`username`</span><span
class="br0">&#41;</span>
<span class="br0">&#41;</span>;
&nbsp;
&nbsp;
<span
class="kw1">ALTER</span> <span class="kw1">TABLE</span> <span
class="st0">`tasks`</span> <span class="kw1">ADD</span> <span
class="kw1">FOREIGN</span> <span class="kw1">KEY</span> <span
class="br0">&#40;</span><span class="st0">`owner_id`</span><span
class="br0">&#41;</span> <span class="kw1">REFERENCES</span> <span
class="st0">`users`</span> <span class="br0">&#40;</span>
    <span
class="st0">`user_id`</span>
<span class="br0">&#41;</span> <span
class="kw1">ON</span> <span class="kw1">DELETE</span> CASCADE;</pre>

<p>在 phpMyAdmin 或者其他工具在数据库中执行上述 DDL
语句创建出需要的数据表后，我们就可以通过 WebSetup
来创建模型了。</p>

<p>分别创建好 Task 和 User 模型后，todo\app\model
目录中就可以看到 task.php 和 user.php
两个文件。虽然自动生成的模型只能算半成品，但基本功能已经可以使用了，我们将在后续开发中不断完善这些模型。</p>
    </div>

    <div class="nofloat"></div>
  </div>

  <div class="guide-footer">

    <table border="0" width="100%">
      <tr>
        <td align="left" width="200">
                    &laquo;
          <a href="node-04thinking-analysis.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-04thinking-analysis">需求分析</a>
          
        </td>

        <td align="center">
          本章：<a href="node-04thinking.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-04thinking">编写代码之前的思考</a>
          <br />
          <a href="index-5.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/">返回索引页</a>
        </td>

        <td align="right" width="200">
                    <a href="node-05users.htm" tppabs="http://qeephp.com/docs/qeephp-quickstart/node-05users">实现用户功能</a>
          &raquo;
                  </td>
      </tr>
    </table>

  </div>

</div>


    </div>

    <!-- 整页 -->



<div id="google-adsense-block720" style="margin: 10px auto 20px auto; width: 730px; height: 90px;"></div>


  </div>
</div>
<!-- /core -->

<!-- footer -->
<div id="footer">
  <div id="breadcrumbs">
    <p>
      <a href="index.htm" tppabs="http://qeephp.com/">返回首页</a>
      &nbsp;&nbsp;
      <a href="projects.htm" tppabs="http://qeephp.com/projects">开源项目与插件</a>
      &nbsp;&nbsp;
      <a href="cases.htm" tppabs="http://qeephp.com/cases">应用展示</a>
      &nbsp;&nbsp;
      <a href="framework.htm" tppabs="http://qeephp.com/framework">框架</a>
      &nbsp;&nbsp;
      <a href="docs.htm" tppabs="http://qeephp.com/docs">文档</a>
      &nbsp;&nbsp;
      <a href="index-1.htm" tppabs="http://qeephp.com/bbs/">论坛</a>
    </p>
  </div>
</div>
<!-- /footer -->

</div>
<!-- /page-wrapper -->

</body>
