<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>QeePHP/FleaPHP 开源开发框架 - 起源科技开源社区|中国领先的 PHP 开源解决方案提供商</title>
<link rel="shortcut icon" href="/favicon.ico">
<link rel="stylesheet" type="text/css" href="base.css" tppabs="http://qeephp.com/qeephp/base.css" />
<link rel="stylesheet" type="text/css" href="jquery-ui-081120.css" tppabs="http://qeephp.com/qeephp/jquery-ui-081120.css" />
<script type="text/javascript" src="jquery-1.2.6.min.js" tppabs="http://qeephp.com/js/jquery-1.2.6.min.js"></script>
<script type="text/javascript" src="jquery-ui-1.5.3-081202.min.js" tppabs="http://qeephp.com/qeephp/jquery-ui-1.5.3-081202.min.js"></script>
<script type="text/javascript">
$(document).ready(function() {
});
</script>
</head>
<body>

<div id="page-wrapper">

<!-- header -->
<div id="header">
  <div class="container clearfix">
    <div id="header_nav">
      <ul id="navigation">
        <li class="first"><a href="projects.htm" tppabs="http://qeephp.com/projects">开源项目与插件</a></li>
        <li><a href="cases.htm" tppabs="http://qeephp.com/cases">应用展示</a></li>
        <li><a href="framework.htm" tppabs="http://qeephp.com/framework">框架</a></li>
        <li><a href="docs.htm" tppabs="http://qeephp.com/docs">文档</a></li>
	  </ul>
    </div>
  </div>
</div>
<!-- /header -->


<!-- core -->
<div id="core" class="clearfix">
  <div class="container clearfix">

    

<script type="text/javascript">
$(document).ready(function() {
    $("a.toggle").toggle(function(){
        $(this).text($(this).text().replace(/隐藏/,'显示'));
        var a=$(this).parents(".summary");
        a.find(".inherited").hide();
    },function(){
        $(this).text($(this).text().replace(/显示/,'隐藏'));
        $(this).parents(".summary").find(".inherited").show();
    });
});
</script>


   <!-- 左侧栏 -->

    <div id="subpage_sidebar" class="left apidoc-classes-index">

      

<h3>包 core</h3>

<ul>
    <li>
    <a href="class-q.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-q" title="Q">Q</a>
  </li>
    <li>
    <a href="class-qexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qexception" title="QException">QException</a>
  </li>
    <li>
    <a href="class-qcoll.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qcoll" title="QColl">QColl</a>
  </li>
    <li>
    <a href="class-qcontext.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qcontext" title="QContext">QContext</a>
  </li>
    <li>
    <a href="class-qlog.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qlog" title="QLog">QLog</a>
  </li>
  
</ul>


<h3>包 mvc</h3>

<ul>
    <li>
    <a href="class-qacl.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qacl" title="QACL">QACL</a>
  </li>
    <li>
    <a href="class-qcontroller-abstract.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qcontroller-abstract" title="QController_Abstract">QController_Abstract</a>
  </li>
    <li>
    <a href="class-qcontroller-forward.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qcontroller-forward" title="QController_Forward">QController_Forward</a>
  </li>
    <li>
    <a href="class-qrouter.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qrouter" title="QRouter">QRouter</a>
  </li>
    <li>
    <a href="class-qview-output.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qview-output" title="QView_Output">QView_Output</a>
  </li>
    <li>
    <a href="class-qview-redirect.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qview-redirect" title="QView_Redirect">QView_Redirect</a>
  </li>
    <li>
    <a href="class-qview-render-php.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qview-render-php" title="QView_Render_PHP">QView_Render_PHP</a>
  </li>
    <li>
    <a href="class-qview-render-php-parser.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qview-render-php-parser" title="QView_Render_PHP_Parser">QView_Render_PHP_Parser</a>
  </li>
  
</ul>


<h3>包 orm</h3>

<ul>
    <li>
    <a href="class-qdb-activerecord-behavior-abstract.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-behavior-abstract" title="QDB_ActiveRecord_Behavior_Abstract">QDB_ActiveRecord_Behavior_Abst...</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-abstract.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-abstract" title="QDB_ActiveRecord_Abstract">QDB_ActiveRecord_Abstract</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-association-abstract.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-association-abstract" title="QDB_ActiveRecord_Association_Abstract">QDB_ActiveRecord_Association_A...</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-association-belongsto.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-association-belongsto" title="QDB_ActiveRecord_Association_BelongsTo">QDB_ActiveRecord_Association_B...</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-association-coll.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-association-coll" title="QDB_ActiveRecord_Association_Coll">QDB_ActiveRecord_Association_C...</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-association-hasmany.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-association-hasmany" title="QDB_ActiveRecord_Association_HasMany">QDB_ActiveRecord_Association_H...</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-association-hasone.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-association-hasone" title="QDB_ActiveRecord_Association_HasOne">QDB_ActiveRecord_Association_H...</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-association-manytomany.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-association-manytomany" title="QDB_ActiveRecord_Association_ManyToMany">QDB_ActiveRecord_Association_M...</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-meta.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-meta" title="QDB_ActiveRecord_Meta">QDB_ActiveRecord_Meta</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-view.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-view" title="QDB_ActiveRecord_View">QDB_ActiveRecord_View</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-viewmeta.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-viewmeta" title="QDB_ActiveRecord_ViewMeta">QDB_ActiveRecord_ViewMeta</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-callbacks.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-callbacks" title="QDB_ActiveRecord_Callbacks">QDB_ActiveRecord_Callbacks</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-interface.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-interface" title="QDB_ActiveRecord_Interface">QDB_ActiveRecord_Interface</a>
  </li>
  
</ul>


<h3>包 form</h3>

<ul>
    <li>
    <a href="class-qform-element.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qform-element" title="QForm_Element">QForm_Element</a>
  </li>
    <li>
    <a href="class-qform-group.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qform-group" title="QForm_Group">QForm_Group</a>
  </li>
    <li>
    <a href="class-qform.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qform" title="QForm">QForm</a>
  </li>
  
</ul>


<h3>包 database</h3>

<ul>
    <li>
    <a href="class-qdb-adapter-abstract.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-adapter-abstract" title="QDB_Adapter_Abstract">QDB_Adapter_Abstract</a>
  </li>
    <li>
    <a href="class-qdb-adapter-mysql.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-adapter-mysql" title="QDB_Adapter_Mysql">QDB_Adapter_Mysql</a>
  </li>
    <li>
    <a href="class-qdb-adapter-pdo-abstract.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-adapter-pdo-abstract" title="QDB_Adapter_Pdo_Abstract">QDB_Adapter_Pdo_Abstract</a>
  </li>
    <li>
    <a href="class-qdb-adapter-pdo-exception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-adapter-pdo-exception" title="QDB_Adapter_Pdo_Exception">QDB_Adapter_Pdo_Exception</a>
  </li>
    <li>
    <a href="class-qdb-adapter-pdo-pgsql.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-adapter-pdo-pgsql" title="QDB_Adapter_Pdo_Pgsql">QDB_Adapter_Pdo_Pgsql</a>
  </li>
    <li>
    <a href="class-qdb-adapter-pgsql.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-adapter-pgsql" title="QDB_Adapter_Pgsql">QDB_Adapter_Pgsql</a>
  </li>
    <li>
    <a href="class-qdb-cond.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-cond" title="QDB_Cond">QDB_Cond</a>
  </li>
    <li>
    <a href="class-qdb.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb" title="QDB">QDB</a>
  </li>
    <li>
    <a href="class-qdb-expr.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-expr" title="QDB_Expr">QDB_Expr</a>
  </li>
    <li>
    <a href="class-qdb-result-abstract.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-result-abstract" title="QDB_Result_Abstract">QDB_Result_Abstract</a>
  </li>
    <li>
    <a href="class-qdb-result-mysql.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-result-mysql" title="QDB_Result_Mysql">QDB_Result_Mysql</a>
  </li>
    <li>
    <a href="class-qdb-result-pdo.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-result-pdo" title="QDB_Result_Pdo">QDB_Result_Pdo</a>
  </li>
    <li>
    <a href="class-qdb-result-pgsql.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-result-pgsql" title="QDB_Result_Pgsql">QDB_Result_Pgsql</a>
  </li>
    <li>
    <a href="class-qdb-select.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-select" title="QDB_Select">QDB_Select</a>
  </li>
    <li>
    <a href="class-qdb-table.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-table" title="QDB_Table">QDB_Table</a>
  </li>
    <li>
    <a href="class-qdb-table-lite.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-table-lite" title="QDB_Table_Lite">QDB_Table_Lite</a>
  </li>
  
</ul>


<h3>包 helper</h3>

<ul>
    <li>
    <a href="class-helper-filesys.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-helper-filesys" title="Helper_Filesys">Helper_Filesys</a>
  </li>
    <li>
    <a href="class-helper-array.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-helper-array" title="Helper_Array">Helper_Array</a>
  </li>
    <li>
    <a href="class-qdom-document.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdom-document" title="QDom_Document">QDom_Document</a>
  </li>
    <li>
    <a href="class-qdom-element.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdom-element" title="QDom_Element">QDom_Element</a>
  </li>
    <li>
    <a href="class-qfilter.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qfilter" title="QFilter">QFilter</a>
  </li>
    <li>
    <a href="class-helper-image.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-helper-image" title="Helper_Image">Helper_Image</a>
  </li>
    <li>
    <a href="class-helper-imagegd.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-helper-imagegd" title="Helper_ImageGD">Helper_ImageGD</a>
  </li>
    <li>
    <a href="class-helper-imgcode.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-helper-imgcode" title="Helper_ImgCode">Helper_ImgCode</a>
  </li>
    <li>
    <a href="class-helper-imgcodesimple.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-helper-imgcodesimple" title="Helper_ImgCodeSimple">Helper_ImgCodeSimple</a>
  </li>
    <li>
    <a href="class-helper-imgcodettf.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-helper-imgcodettf" title="Helper_ImgCodeTTF">Helper_ImgCodeTTF</a>
  </li>
    <li>
    <a href="class-helper-uploader.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-helper-uploader" title="Helper_Uploader">Helper_Uploader</a>
  </li>
    <li>
    <a href="class-helper-uploader-file.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-helper-uploader-file" title="Helper_Uploader_File">Helper_Uploader_File</a>
  </li>
    <li>
    <a href="class-qvalidator.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qvalidator" title="QValidator">QValidator</a>
  </li>
    <li>
    <a href="class-helper-yaml.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-helper-yaml" title="Helper_YAML">Helper_YAML</a>
  </li>
  
</ul>


<h3>包 cache</h3>

<ul>
    <li>
    <a href="class-qcache-apc.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qcache-apc" title="QCache_APC">QCache_APC</a>
  </li>
    <li>
    <a href="class-qcache-file.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qcache-file" title="QCache_File">QCache_File</a>
  </li>
    <li>
    <a href="class-qcache-memory.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qcache-memory" title="QCache_Memory">QCache_Memory</a>
  </li>
    <li>
    <a href="class-qcache-phpdatafile.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qcache-phpdatafile" title="QCache_PHPDataFile">QCache_PHPDataFile</a>
  </li>
    <li>
    <a href="class-qcache-xcache.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qcache-xcache" title="QCache_XCache">QCache_XCache</a>
  </li>
  
</ul>


<h3>包 webcontrols</h3>

<ul>
    <li>
    <a href="class-qui-control-abstract.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qui-control-abstract" title="QUI_Control_Abstract">QUI_Control_Abstract</a>
  </li>
    <li>
    <a href="class-control-input-abstract.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-control-input-abstract" title="Control_Input_Abstract">Control_Input_Abstract</a>
  </li>
    <li>
    <a href="class-control-button.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-control-button" title="Control_Button">Control_Button</a>
  </li>
    <li>
    <a href="class-control-checkbox-abstract.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-control-checkbox-abstract" title="Control_Checkbox_Abstract">Control_Checkbox_Abstract</a>
  </li>
    <li>
    <a href="class-control-checkbox.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-control-checkbox" title="Control_Checkbox">Control_Checkbox</a>
  </li>
    <li>
    <a href="class-control-checkboxgroup-abstract.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-control-checkboxgroup-abstract" title="Control_CheckboxGroup_Abstract">Control_CheckboxGroup_Abstract</a>
  </li>
    <li>
    <a href="class-control-checkboxgroup.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-control-checkboxgroup" title="Control_CheckboxGroup">Control_CheckboxGroup</a>
  </li>
    <li>
    <a href="class-control-dropdownlist.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-control-dropdownlist" title="Control_DropdownList">Control_DropdownList</a>
  </li>
    <li>
    <a href="class-control-hidden.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-control-hidden" title="Control_Hidden">Control_Hidden</a>
  </li>
    <li>
    <a href="class-control-label.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-control-label" title="Control_Label">Control_Label</a>
  </li>
    <li>
    <a href="class-control-listbox.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-control-listbox" title="Control_Listbox">Control_Listbox</a>
  </li>
    <li>
    <a href="class-control-memo.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-control-memo" title="Control_Memo">Control_Memo</a>
  </li>
    <li>
    <a href="class-control-password.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-control-password" title="Control_Password">Control_Password</a>
  </li>
    <li>
    <a href="class-control-radio.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-control-radio" title="Control_Radio">Control_Radio</a>
  </li>
    <li>
    <a href="class-control-radiogroup.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-control-radiogroup" title="Control_RadioGroup">Control_RadioGroup</a>
  </li>
    <li>
    <a href="class-control-reset.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-control-reset" title="Control_Reset">Control_Reset</a>
  </li>
    <li>
    <a href="class-control-static.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-control-static" title="Control_Static">Control_Static</a>
  </li>
    <li>
    <a href="class-control-submit.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-control-submit" title="Control_Submit">Control_Submit</a>
  </li>
    <li>
    <a href="class-control-textbox.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-control-textbox" title="Control_Textbox">Control_Textbox</a>
  </li>
    <li>
    <a href="class-control-upload.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-control-upload" title="Control_Upload">Control_Upload</a>
  </li>
  
</ul>


<h3>包 behavior</h3>

<ul>
    <li>
    <a href="class-model-behavior-acluser.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-model-behavior-acluser" title="Model_Behavior_AclUser">Model_Behavior_AclUser</a>
  </li>
    <li>
    <a href="class-model-behavior-fastuuid.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-model-behavior-fastuuid" title="Model_Behavior_Fastuuid">Model_Behavior_Fastuuid</a>
  </li>
    <li>
    <a href="class-model-behavior-relation.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-model-behavior-relation" title="Model_Behavior_Relation">Model_Behavior_Relation</a>
  </li>
    <li>
    <a href="class-model-behavior-uniqueness.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-model-behavior-uniqueness" title="Model_Behavior_Uniqueness">Model_Behavior_Uniqueness</a>
  </li>
  
</ul>


<h3>包 exception</h3>

<ul>
    <li>
    <a href="class-qcache-exception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qcache-exception" title="QCache_Exception">QCache_Exception</a>
  </li>
    <li>
    <a href="class-q-classfileexistsexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-q-classfileexistsexception" title="Q_ClassFileExistsException">Q_ClassFileExistsException</a>
  </li>
    <li>
    <a href="class-q-classnotdefinedexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-q-classnotdefinedexception" title="Q_ClassNotDefinedException">Q_ClassNotDefinedException</a>
  </li>
    <li>
    <a href="class-q-createdirfailedexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-q-createdirfailedexception" title="Q_CreateDirFailedException">Q_CreateDirFailedException</a>
  </li>
    <li>
    <a href="class-q-createfilefailedexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-q-createfilefailedexception" title="Q_CreateFileFailedException">Q_CreateFileFailedException</a>
  </li>
    <li>
    <a href="class-q-filenotfoundexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-q-filenotfoundexception" title="Q_FileNotFoundException">Q_FileNotFoundException</a>
  </li>
    <li>
    <a href="class-q-filenotreadableexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-q-filenotreadableexception" title="Q_FileNotReadableException">Q_FileNotReadableException</a>
  </li>
    <li>
    <a href="class-q-illegalclassnameexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-q-illegalclassnameexception" title="Q_IllegalClassNameException">Q_IllegalClassNameException</a>
  </li>
    <li>
    <a href="class-q-illegalfilenameexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-q-illegalfilenameexception" title="Q_IllegalFilenameException">Q_IllegalFilenameException</a>
  </li>
    <li>
    <a href="class-qlog-exception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qlog-exception" title="QLog_Exception">QLog_Exception</a>
  </li>
    <li>
    <a href="class-q-notimplementedexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-q-notimplementedexception" title="Q_NotImplementedException">Q_NotImplementedException</a>
  </li>
    <li>
    <a href="class-q-removedirfailedexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-q-removedirfailedexception" title="Q_RemoveDirFailedException">Q_RemoveDirFailedException</a>
  </li>
    <li>
    <a href="class-qdb-exception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-exception" title="QDB_Exception">QDB_Exception</a>
  </li>
    <li>
    <a href="class-qdb-exception-duplicatekey.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-exception-duplicatekey" title="QDB_Exception_DuplicateKey">QDB_Exception_DuplicateKey</a>
  </li>
    <li>
    <a href="class-qdb-select-exception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-select-exception" title="QDB_Select_Exception">QDB_Select_Exception</a>
  </li>
    <li>
    <a href="class-qdb-table-exception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-table-exception" title="QDB_Table_Exception">QDB_Table_Exception</a>
  </li>
    <li>
    <a href="class-acluser-exception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-acluser-exception" title="AclUser_Exception">AclUser_Exception</a>
  </li>
    <li>
    <a href="class-acluser-duplicateusernameexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-acluser-duplicateusernameexception" title="AclUser_DuplicateUsernameException">AclUser_DuplicateUsernameExcep...</a>
  </li>
    <li>
    <a href="class-acluser-usernamenotfoundexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-acluser-usernamenotfoundexception" title="AclUser_UsernameNotFoundException">AclUser_UsernameNotFoundExcept...</a>
  </li>
    <li>
    <a href="class-acluser-wrongpasswordexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-acluser-wrongpasswordexception" title="AclUser_WrongPasswordException">AclUser_WrongPasswordException</a>
  </li>
    <li>
    <a href="class-qform-exception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qform-exception" title="QForm_Exception">QForm_Exception</a>
  </li>
    <li>
    <a href="class-qdom-exception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdom-exception" title="QDom_Exception">QDom_Exception</a>
  </li>
    <li>
    <a href="class-qvalidator-exception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qvalidator-exception" title="QValidator_Exception">QValidator_Exception</a>
  </li>
    <li>
    <a href="class-qvalidator-validatefailedexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qvalidator-validatefailedexception" title="QValidator_ValidateFailedException">QValidator_ValidateFailedExcep...</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-association-exception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-association-exception" title="QDB_ActiveRecord_Association_Exception">QDB_ActiveRecord_Association_E...</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-association-notdefinedexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-association-notdefinedexception" title="QDB_ActiveRecord_Association_NotDefinedException">QDB_ActiveRecord_Association_N...</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-association-rejectexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-association-rejectexception" title="QDB_ActiveRecord_Association_RejectException">QDB_ActiveRecord_Association_R...</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-behavior-exception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-behavior-exception" title="QDB_ActiveRecord_Behavior_Exception">QDB_ActiveRecord_Behavior_Exce...</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-exception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-exception" title="QDB_ActiveRecord_Exception">QDB_ActiveRecord_Exception</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-calltoundefinedmethodexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-calltoundefinedmethodexception" title="QDB_ActiveRecord_CallToUndefinedMethodException">QDB_ActiveRecord_CallToUndefin...</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-changingreadonlypropexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-changingreadonlypropexception" title="QDB_ActiveRecord_ChangingReadonlyPropException">QDB_ActiveRecord_ChangingReado...</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-compositepkincompatibleexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-compositepkincompatibleexception" title="QDB_ActiveRecord_CompositePKIncompatibleException">QDB_ActiveRecord_CompositePKIn...</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-destroywithoutidexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-destroywithoutidexception" title="QDB_ActiveRecord_DestroyWithoutIdException">QDB_ActiveRecord_DestroyWithou...</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-expectsassocpropexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-expectsassocpropexception" title="QDB_ActiveRecord_ExpectsAssocPropException">QDB_ActiveRecord_ExpectsAssocP...</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-meta-exception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-meta-exception" title="QDB_ActiveRecord_Meta_Exception">QDB_ActiveRecord_Meta_Exceptio...</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-settingproptypemismatchexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-settingproptypemismatchexception" title="QDB_ActiveRecord_SettingPropTypeMismatchException">QDB_ActiveRecord_SettingPropTy...</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-undefinedpropexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-undefinedpropexception" title="QDB_ActiveRecord_UndefinedPropException">QDB_ActiveRecord_UndefinedProp...</a>
  </li>
    <li>
    <a href="class-qdb-activerecord-validatefailedexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdb-activerecord-validatefailedexception" title="QDB_ActiveRecord_ValidateFailedException">QDB_ActiveRecord_ValidateFaile...</a>
  </li>
    <li>
    <a href="class-qacl-exception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qacl-exception" title="QACL_Exception">QACL_Exception</a>
  </li>
    <li>
    <a href="class-qrouter-exception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qrouter-exception" title="QRouter_Exception">QRouter_Exception</a>
  </li>
    <li>
    <a href="class-qrouter-invalidrouteexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qrouter-invalidrouteexception" title="QRouter_InvalidRouteException">QRouter_InvalidRouteException</a>
  </li>
    <li>
    <a href="class-qrouter-routenotfoundexception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qrouter-routenotfoundexception" title="QRouter_RouteNotFoundException">QRouter_RouteNotFoundException</a>
  </li>
    <li>
    <a href="class-qview-exception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qview-exception" title="QView_Exception">QView_Exception</a>
  </li>
    <li>
    <a href="class-qui-exception.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qui-exception" title="QUI_Exception">QUI_Exception</a>
  </li>
  
</ul>


<h3>包 debug</h3>

<ul>
    <li>
    <a href="class-qdebug.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdebug" title="QDebug">QDebug</a>
  </li>
    <li>
    <a href="class-qdebug-firephp.htm" tppabs="http://qeephp.com/docs/qeephp-api/class-qdebug-firephp" title="QDebug_FirePHP">QDebug_FirePHP</a>
  </li>
  
</ul>



    </div>

    <!-- /左侧栏 -->

    <!-- 右侧栏 -->

    <div id="col3" class="right contents">

      
<div class="apidoc-class">

  <h1>类 - Q</h1>

  <ul class="nav clearfix">
    <li><a href="index-8.htm" tppabs="http://qeephp.com/docs/qeephp-api/">所有包</a></li>

        <li><a href="#properties">类属性</a></li>
    
        <li><a href="#methods">类方法</a></li>
    
    <li class="more"><a href="index-4.htm" tppabs="http://qeephp.com/docs/">阅读更多文档...</a></li>

  </ul>

  
<table class="summary-table" cellpadding="0" cellspacing="0" >
  <tr>
    <th nowrap="nowrap">包</th>
    <td>core</td>
  </tr>
  <tr>
    <th nowrap="nowrap">类层次</th>
    <td>
    class Q
    </td>
  </tr>

  
  
    <tr>
    <th nowrap="nowrap">版本</th>
    <td>$Id: q.php 2628 2009-07-17 08:40:15Z jerry $</td>
  </tr>
  
</table>

<div class="formatted">
  
<p>类 Q 是 QeePHP
框架的核心类，提供了框架运行所需的基本服务</p>

<p>类 Q 提供 QeePHP 框架的基本服务，包括：</p>

<ul>
	<li>设置的读取和修改；</li>

	<li>类定义文件的搜索和载入；</li>

	<li>对象的单子模式实现，以及对象注册和检索；</li>

	<li>统一缓存接口；</li>

	<li>基本工具方法。</li>
</ul>
</div>


  <a name="properties"></a>

  
  <a name="methods"></a>
  
<div class="summary">
  <h2>公共方法</h2>
  <p>
    <a href="#" class="toggle">隐藏继承的方法</a>
  </p>

  <table class="list-table">
    <tr>
      <th>方法</th><th>描述</th><th>定义于</th>
    </tr>

        <tr>
      <td>
        <a href="#Q_version">version()</a>
      </td>

      <td>返回 QeePHP 版本号</td>
      <td>
                Q        
      </td>
    </tr>
        <tr>
      <td>
        <a href="#Q_ini">ini()</a>
      </td>

      <td>获取指定的设置内容</td>
      <td>
                Q        
      </td>
    </tr>
        <tr>
      <td>
        <a href="#Q_changeIni">changeIni()</a>
      </td>

      <td>修改指定设置的内容</td>
      <td>
                Q        
      </td>
    </tr>
        <tr>
      <td>
        <a href="#Q_replaceIni">replaceIni()</a>
      </td>

      <td>替换已有的设置值</td>
      <td>
                Q        
      </td>
    </tr>
        <tr>
      <td>
        <a href="#Q_cleanIni">cleanIni()</a>
      </td>

      <td>删除指定的设置</td>
      <td>
                Q        
      </td>
    </tr>
        <tr>
      <td>
        <a href="#Q_loadClass">loadClass()</a>
      </td>

      <td>载入指定类的定义文件，如果载入失败抛出异常</td>
      <td>
                Q        
      </td>
    </tr>
        <tr>
      <td>
        <a href="#Q_import">import()</a>
      </td>

      <td>添加一个类搜索路径</td>
      <td>
                Q        
      </td>
    </tr>
        <tr>
      <td>
        <a href="#Q_loadClassFile">loadClassFile()</a>
      </td>

      <td>载入特定文件，并检查是否包含指定类的定义</td>
      <td>
                Q        
      </td>
    </tr>
        <tr>
      <td>
        <a href="#Q_loadFile">loadFile()</a>
      </td>

      <td>载入指定的文件</td>
      <td>
                Q        
      </td>
    </tr>
        <tr>
      <td>
        <a href="#Q_singleton">singleton()</a>
      </td>

      <td>返回指定对象的唯一实例</td>
      <td>
                Q        
      </td>
    </tr>
        <tr>
      <td>
        <a href="#Q_register">register()</a>
      </td>

      <td>以特定名字在对象注册表中登记一个对象</td>
      <td>
                Q        
      </td>
    </tr>
        <tr>
      <td>
        <a href="#Q_registry">registry()</a>
      </td>

      <td>查找指定名字的对象实例，如果指定名字的对象不存在则抛出异常</td>
      <td>
                Q        
      </td>
    </tr>
        <tr>
      <td>
        <a href="#Q_isRegistered">isRegistered()</a>
      </td>

      <td>检查指定名字的对象是否已经注册</td>
      <td>
                Q        
      </td>
    </tr>
        <tr>
      <td>
        <a href="#Q_cache">cache()</a>
      </td>

      <td>读取指定的缓存内容，如果内容不存在或已经失效，则返回 false</td>
      <td>
                Q        
      </td>
    </tr>
        <tr>
      <td>
        <a href="#Q_writeCache">writeCache()</a>
      </td>

      <td>将变量内容写入缓存，失败抛出异常</td>
      <td>
                Q        
      </td>
    </tr>
        <tr>
      <td>
        <a href="#Q_cleanCache">cleanCache()</a>
      </td>

      <td>删除指定的缓存内容</td>
      <td>
                Q        
      </td>
    </tr>
        <tr>
      <td>
        <a href="#Q_normalize">normalize()</a>
      </td>

      <td>对字符串或数组进行格式化，返回格式化后的数组</td>
      <td>
                Q        
      </td>
    </tr>
        <tr>
      <td>
        <a href="#Q_control">control()</a>
      </td>

      <td>创建一个用户界面控件对象</td>
      <td>
                Q        
      </td>
    </tr>
        <tr>
      <td>
        <a href="#Q_autoload">autoload()</a>
      </td>

      <td>用于 QeePHP 的类自动载入，不需要由开发者调用</td>
      <td>
                Q        
      </td>
    </tr>
        <tr>
      <td>
        <a href="#Q_registerAutoload">registerAutoload()</a>
      </td>

      <td>注册或取消注册一个自动类载入方法</td>
      <td>
                Q        
      </td>
    </tr>
    
  </table>
</div>



<div class="details">

  <h2>属性详细说明</h2>

    
  <a name="_objects"></a>

  <div class="name property">
    $_objects
    <span class="tags">属性</span>
  </div>

  <div class="signature">
      </div>

  <div class="formatted">
    
<p>对象注册表</p>
  </div>

    
  <a name="_class_path"></a>

  <div class="name property">
    $_class_path
    <span class="tags">属性</span>
  </div>

  <div class="signature">
      </div>

  <div class="formatted">
    
<p>类搜索路径</p>
  </div>

    
  <a name="_class_path_options"></a>

  <div class="name property">
    $_class_path_options
    <span class="tags">属性</span>
  </div>

  <div class="signature">
      </div>

  <div class="formatted">
    
<p>类搜索路径的选项</p>
  </div>

    
  <a name="_ini"></a>

  <div class="name property">
    $_ini
    <span class="tags">属性</span>
  </div>

  <div class="signature">
      </div>

  <div class="formatted">
    
<p>应用程序设置</p>
  </div>

  
</div>


<div class="details">

  <h2>方法详细说明</h2>

    
  <a name="Q_version"></a>

  <div class="name method">
    version()
    <span class="tags">方法</span>
  </div>

  <table class="list-table">
    <tr>
      <td colspan="3">
        <span class="signature2">
          public static string <strong>version</strong>()        </span>
      </td>
    </tr>

    
  </table>

  <div class="formatted">
    
<p>返回 QeePHP 版本号</p>
  </div>

    
  <a name="Q_ini"></a>

  <div class="name method">
    ini()
    <span class="tags">方法</span>
  </div>

  <table class="list-table">
    <tr>
      <td colspan="3">
        <span class="signature2">
          public static mixed <strong>ini</strong>($option, $default)        </span>
      </td>
    </tr>

        
    <tr>
      <td class="param_name">$option</td>
      <td class="param_type">string</td>
      <td class="param_desc">要获取设置项的名称</td>
    </tr>
    
    <tr>
      <td class="param_name">$default</td>
      <td class="param_type">mixed</td>
      <td class="param_desc">当设置不存在时要返回的设置默认值</td>
    </tr>
    
    <tr>
      <td class="param_name">{return}</td>
      <td class="param_type">mixed</td>
      <td class="param_desc">返回设置项的值</td>
    </tr>
    
  </table>

  <div class="formatted">
    
<p>获取指定的设置内容</p>

<p>$option 参数指定要获取的设置名。
如果设置中找不到指定的选项，则返回由 $default
参数指定的值。</p>

<pre class="php code"><span class="re0">$option_value</span> <span
class="sy0">=</span> Q<span class="sy0">::</span><span
class="me2">ini</span><span class="br0">&#40;</span><span
class="st_h">'my_option'</span><span class="br0">&#41;</span><span
class="sy0">;</span></pre>

<p>对于层次化的设置信息，可以通过在 $option
中使用“/”符号来指定。</p>

<p>例如有一个名为 option_group
的设置项，其中包含三个子项目。 现在要查询其中的 my_option
设置项的内容。</p>

<pre class="php code"><span class="co1">// +--- option_group</span>
<span
class="co1">//   +-- my_option  = this is my_option</span>
<span
class="co1">//   +-- my_option2 = this is my_option2</span>
<span
class="co1">//   \-- my_option3 = this is my_option3</span>
&nbsp;
<span
class="co1">// 查询 option_group 设置组里面的 my_option 项</span>
<span
class="co1">// 将会显示 this is my_option</span>
<span
class="kw3">echo</span> Q<span class="sy0">::</span><span
class="me2">ini</span><span class="br0">&#40;</span><span
class="st_h">'option_group/my_option'</span><span class="br0">&#41;</span><span
class="sy0">;</span></pre>

<p>要读取更深层次的设置项，可以使用更多的“/”符号，但太多层次会导致读取速度变慢。</p>

<p>如果要获得所有设置项的内容，将 $option 参数指定为 '/'
即可：</p>

<pre class="php code"><span
class="co1">// 获取所有设置项的内容</span>
<span
class="re0">$all</span> <span class="sy0">=</span> Q<span
class="sy0">::</span><span class="me2">ini</span><span
class="br0">&#40;</span><span class="st_h">'/'</span><span
class="br0">&#41;</span><span class="sy0">;</span></pre>
  </div>

    
  <a name="Q_changeIni"></a>

  <div class="name method">
    changeIni()
    <span class="tags">方法</span>
  </div>

  <table class="list-table">
    <tr>
      <td colspan="3">
        <span class="signature2">
          public static void <strong>changeIni</strong>($option, $data)        </span>
      </td>
    </tr>

        
    <tr>
      <td class="param_name">$option</td>
      <td class="param_type">string|array</td>
      <td class="param_desc">要修改的设置项名称，或包含多个设置项目的数组</td>
    </tr>
    
    <tr>
      <td class="param_name">$data</td>
      <td class="param_type">mixed</td>
      <td class="param_desc">指定设置项的新值</td>
    </tr>
    
    <tr>
      <td class="param_name">{return}</td>
      <td class="param_type"></td>
      <td class="param_desc"></td>
    </tr>
    
  </table>

  <div class="formatted">
    
<p>修改指定设置的内容</p>

<p>当 $option 参数是字符串时，$option 指定了要修改的设置项。
$data 则是要为该设置项指定的新数据。</p>

<pre class="php code"><span class="co1">// 修改一个设置项</span>
Q<span
class="sy0">::</span><span class="me2">changeIni</span><span
class="br0">&#40;</span><span class="st_h">'option_group/my_option2'</span><span
class="sy0">,</span> <span class="st_h">'new value'</span><span
class="br0">&#41;</span><span class="sy0">;</span></pre>

<p>如果 $option 是一个数组，则假定要修改多个设置项。 那么
$option
则是一个由设置项名称和设置值组成的名值对，或者是一个嵌套数组。</p>

<pre class="php code"><span class="co1">// 假设已有的设置为</span>
<span
class="co1">// +--- option_1 = old value</span>
<span
class="co1">// +--- option_group</span>
<span
class="co1">//   +-- option1 = old value</span>
<span
class="co1">//   +-- option2 = old value</span>
<span
class="co1">//   \-- option3 = old value</span>
&nbsp;
<span
class="co1">// 修改多个设置项</span>
<span class="re0">$arr</span> <span
class="sy0">=</span> <span class="kw3">array</span><span
class="br0">&#40;</span>
     <span class="st_h">'option_1'</span> <span
class="sy0">=&gt;</span> <span class="st_h">'value 1'</span><span
class="sy0">,</span>
     <span class="st_h">'option_2'</span> <span
class="sy0">=&gt;</span> <span class="st_h">'value 2'</span><span
class="sy0">,</span>
     <span class="st_h">'option_group/option2'</span> <span
class="sy0">=&gt;</span> <span class="st_h">'new value'</span><span
class="sy0">,</span>
<span class="br0">&#41;</span><span
class="sy0">;</span>
Q<span class="sy0">::</span><span
class="me2">changeIni</span><span class="br0">&#40;</span><span
class="re0">$arr</span><span class="br0">&#41;</span><span
class="sy0">;</span>
&nbsp;
<span class="co1">// 修改后</span>
<span
class="co1">// +--- option_1 = value 1</span>
<span
class="co1">// +--- option_2 = value 2</span>
<span
class="co1">// +--- option_group</span>
<span
class="co1">//   +-- option1 = old value</span>
<span
class="co1">//   +-- option2 = new value</span>
<span
class="co1">//   \-- option3 = old value</span></pre>

<p>上述代码展示了 Q::changeIni()
的一个重要特性：保持已有设置的层次结构。</p>

<p>因此如果要完全替换某个设置项和其子项目，应该使用
Q::replaceIni() 方法。</p>
  </div>

    
  <a name="Q_replaceIni"></a>

  <div class="name method">
    replaceIni()
    <span class="tags">方法</span>
  </div>

  <table class="list-table">
    <tr>
      <td colspan="3">
        <span class="signature2">
          public static void <strong>replaceIni</strong>($option, $data)        </span>
      </td>
    </tr>

        
    <tr>
      <td class="param_name">$option</td>
      <td class="param_type">string|array</td>
      <td class="param_desc">要修改的设置项名称，或包含多个设置项目的数组</td>
    </tr>
    
    <tr>
      <td class="param_name">$data</td>
      <td class="param_type">mixed</td>
      <td class="param_desc">指定设置项的新值</td>
    </tr>
    
    <tr>
      <td class="param_name">{return}</td>
      <td class="param_type"></td>
      <td class="param_desc"></td>
    </tr>
    
  </table>

  <div class="formatted">
    
<p>替换已有的设置值</p>

<p>Q::replaceIni() 表面上看和 Q::changeIni() 类似。 但是
Q::replaceIni() 不会保持已有设置的层次结构，
而是直接替换到指定的设置项及其子项目。</p>

<pre class="php code"><span class="co1">// 假设已有的设置为</span>
<span
class="co1">// +--- option_1 = old value</span>
<span
class="co1">// +--- option_group</span>
<span
class="co1">//   +-- option1 = old value</span>
<span
class="co1">//   +-- option2 = old value</span>
<span
class="co1">//   \-- option3 = old value</span>
&nbsp;
<span
class="co1">// 替换多个设置项</span>
<span class="re0">$arr</span> <span
class="sy0">=</span> <span class="kw3">array</span><span
class="br0">&#40;</span>
     <span class="st_h">'option_1'</span> <span
class="sy0">=&gt;</span> <span class="st_h">'value 1'</span><span
class="sy0">,</span>
     <span class="st_h">'option_2'</span> <span
class="sy0">=&gt;</span> <span class="st_h">'value 2'</span><span
class="sy0">,</span>
     <span class="st_h">'option_group/option2'</span> <span
class="sy0">=&gt;</span> <span class="st_h">'new value'</span><span
class="sy0">,</span>
<span class="br0">&#41;</span><span
class="sy0">;</span>
Q<span class="sy0">::</span><span
class="me2">replaceIni</span><span class="br0">&#40;</span><span
class="re0">$arr</span><span class="br0">&#41;</span><span
class="sy0">;</span>
&nbsp;
<span class="co1">// 修改后</span>
<span
class="co1">// +--- option_1 = value 1</span>
<span
class="co1">// +--- option_2 = value 2</span>
<span
class="co1">// +--- option_group</span>
<span
class="co1">//   +-- option2 = new value</span></pre>

<p>从上述代码的执行结果可以看出 Q::replaceIni() 和 Q::changeIni()
的重要区别。</p>

<p>不过由于 Q::replaceIni() 速度比 Q::changeIni() 快很多，
因此应该尽量使用 Q::replaceIni() 来代替 Q::changeIni()。</p>
  </div>

    
  <a name="Q_cleanIni"></a>

  <div class="name method">
    cleanIni()
    <span class="tags">方法</span>
  </div>

  <table class="list-table">
    <tr>
      <td colspan="3">
        <span class="signature2">
          public static void <strong>cleanIni</strong>($option)        </span>
      </td>
    </tr>

        
    <tr>
      <td class="param_name">$option</td>
      <td class="param_type">mixed</td>
      <td class="param_desc">要删除的设置项名称</td>
    </tr>
    
    <tr>
      <td class="param_name">{return}</td>
      <td class="param_type"></td>
      <td class="param_desc"></td>
    </tr>
    
  </table>

  <div class="formatted">
    
<p>删除指定的设置</p>

<p>Q::cleanIni() 可以删除指定的设置项目及其子项目。</p>
  </div>

    
  <a name="Q_loadClass"></a>

  <div class="name method">
    loadClass()
    <span class="tags">方法</span>
  </div>

  <table class="list-table">
    <tr>
      <td colspan="3">
        <span class="signature2">
          public static string|boolean <strong>loadClass</strong>($class_name, $dirs, $throw)        </span>
      </td>
    </tr>

        
    <tr>
      <td class="param_name">$class_name</td>
      <td class="param_type">string</td>
      <td class="param_desc">要载入的类</td>
    </tr>
    
    <tr>
      <td class="param_name">$dirs</td>
      <td class="param_type">string|array</td>
      <td class="param_desc">指定载入类的搜索路径</td>
    </tr>
    
    <tr>
      <td class="param_name">$throw</td>
      <td class="param_type"></td>
      <td class="param_desc"></td>
    </tr>
    
    <tr>
      <td class="param_name">{return}</td>
      <td class="param_type">string|boolean</td>
      <td class="param_desc">成功返回类名，失败返回 false</td>
    </tr>
    
  </table>

  <div class="formatted">
    
<p>载入指定类的定义文件，如果载入失败抛出异常</p>

<pre class="php code">Q<span class="sy0">::</span><span
class="me2">loadClass</span><span class="br0">&#40;</span><span
class="st_h">'Table_Posts'</span><span class="br0">&#41;</span><span
class="sy0">;</span></pre>

<p>$dirs 参数可以是一个以 PATH_SEPARATOR 常量分隔的字符串，
也可以是一个包含多个目录名的数组。</p>

<pre class="php code">Q<span class="sy0">::</span><span
class="me2">loadClass</span><span class="br0">&#40;</span><span
class="st_h">'Table_Posts'</span><span class="sy0">,</span> <span
class="kw3">array</span><span class="br0">&#40;</span><span
class="st_h">'/www/mysite/app'</span><span class="sy0">,</span> <span
class="st_h">'/www/mysite/lib'</span><span class="br0">&#41;</span><span
class="br0">&#41;</span><span class="sy0">;</span></pre>
  </div>

    
  <a name="Q_import"></a>

  <div class="name method">
    import()
    <span class="tags">方法</span>
  </div>

  <table class="list-table">
    <tr>
      <td colspan="3">
        <span class="signature2">
          public static void <strong>import</strong>($dir, $case_sensitive)        </span>
      </td>
    </tr>

        
    <tr>
      <td class="param_name">$dir</td>
      <td class="param_type">string</td>
      <td class="param_desc">要添加的搜索路径</td>
    </tr>
    
    <tr>
      <td class="param_name">$case_sensitive</td>
      <td class="param_type">boolean</td>
      <td class="param_desc">在该路径中查找类文件时是否区分文件名大小写</td>
    </tr>
    
    <tr>
      <td class="param_name">{return}</td>
      <td class="param_type"></td>
      <td class="param_desc"></td>
    </tr>
    
  </table>

  <div class="formatted">
    
<p>添加一个类搜索路径</p>

<p>如果要使用 Q::loadClass() 载入非 QeePHP 的类，需要通过
Q::import() 添加类类搜索路径。</p>

<p>要注意，Q::import() 添加的路径和类名称有关系。</p>

<p>例如类的名称为
Vendor_Smarty_Adapter，那么该类的定义文件存储结构就是
vendor/smarty/adapter.php。 因此在用 Q::import() 添加
Vendor_Smarty_Adapter 类的搜索路径时， 只能添加
vendor/smarty/adapter.php 的父目录。</p>

<pre class="php code">Q<span class="sy0">::</span><span
class="me2">import</span><span class="br0">&#40;</span><span
class="st_h">'/www/app'</span><span class="br0">&#41;</span><span
class="sy0">;</span>
Q<span class="sy0">::</span><span
class="me2">loadClass</span><span class="br0">&#40;</span><span
class="st_h">'Vendor_Smarty_Adapter'</span><span class="br0">&#41;</span><span
class="sy0">;</span>
<span
class="co1">// 实际载入的文件是 /www/app/vendor/smarty/adapter.php</span></pre>

<p>由于 QeePHP
的规范是文件名全小写，因此要载入文件名存在大小写区分的第三方库时，
应该指定 import() 方法的第二个参数。</p>

<pre class="php code">Q<span class="sy0">::</span><span
class="me2">import</span><span class="br0">&#40;</span><span
class="st_h">'/www/app/vendor'</span><span class="sy0">,</span> <span
class="kw2">true</span><span class="br0">&#41;</span><span
class="sy0">;</span>
Q<span class="sy0">::</span><span
class="me2">loadClass</span><span class="br0">&#40;</span><span
class="st_h">'Zend_Mail'</span><span class="br0">&#41;</span><span
class="sy0">;</span>
<span
class="co1">// 实际载入的文件是 /www/app/vendor/Zend/Mail.php</span></pre>
  </div>

    
  <a name="Q_loadClassFile"></a>

  <div class="name method">
    loadClassFile()
    <span class="tags">方法</span>
  </div>

  <table class="list-table">
    <tr>
      <td colspan="3">
        <span class="signature2">
          public static void <strong>loadClassFile</strong>($filename, $dirs, $class_name, $dirname, $throw)        </span>
      </td>
    </tr>

        
    <tr>
      <td class="param_name">$filename</td>
      <td class="param_type">string</td>
      <td class="param_desc">要载入文件的文件名（含扩展名）</td>
    </tr>
    
    <tr>
      <td class="param_name">$dirs</td>
      <td class="param_type">string|array</td>
      <td class="param_desc">文件的搜索路径</td>
    </tr>
    
    <tr>
      <td class="param_name">$class_name</td>
      <td class="param_type">string</td>
      <td class="param_desc">要检查的类</td>
    </tr>
    
    <tr>
      <td class="param_name">$dirname</td>
      <td class="param_type">string</td>
      <td class="param_desc">是否在查找文件时添加目录前缀</td>
    </tr>
    
    <tr>
      <td class="param_name">$throw</td>
      <td class="param_type">string</td>
      <td class="param_desc">是否在找不到类时抛出异常</td>
    </tr>
    
    <tr>
      <td class="param_name">{return}</td>
      <td class="param_type"></td>
      <td class="param_desc"></td>
    </tr>
    
  </table>

  <div class="formatted">
    
<p>载入特定文件，并检查是否包含指定类的定义</p>

<p>该方法从 $dirs 参数提供的目录中查找并载入 $filename
参数指定的文件。 然后检查该文件是否定义了 $class_name
参数指定的类。</p>

<p>如果没有找到指定类，则抛出异常。</p>

<pre class="php code">Q<span class="sy0">::</span><span
class="me2">loadClassFile</span><span class="br0">&#40;</span><span
class="st_h">'Smarty.class.php'</span><span class="sy0">,</span> <span
class="re0">$dirs</span><span class="sy0">,</span> <span
class="st_h">'Smarty'</span><span class="br0">&#41;</span><span
class="sy0">;</span></pre>
  </div>

    
  <a name="Q_loadFile"></a>

  <div class="name method">
    loadFile()
    <span class="tags">方法</span>
  </div>

  <table class="list-table">
    <tr>
      <td colspan="3">
        <span class="signature2">
          public static mixed <strong>loadFile</strong>($filename, $dirs, $throw)        </span>
      </td>
    </tr>

        
    <tr>
      <td class="param_name">$filename</td>
      <td class="param_type">string</td>
      <td class="param_desc">要载入文件的文件名（含扩展名）</td>
    </tr>
    
    <tr>
      <td class="param_name">$dirs</td>
      <td class="param_type">array</td>
      <td class="param_desc">文件的搜索路径</td>
    </tr>
    
    <tr>
      <td class="param_name">$throw</td>
      <td class="param_type">boolean</td>
      <td class="param_desc">在找不到文件时是否抛出异常</td>
    </tr>
    
    <tr>
      <td class="param_name">{return}</td>
      <td class="param_type">mixed</td>
      <td class="param_desc"></td>
    </tr>
    
  </table>

  <div class="formatted">
    
<p>载入指定的文件</p>

<p>该方法从 $dirs 参数提供的目录中查找并载入 $filename
参数指定的文件。 如果文件不存在，则根据 $throw
参数决定是否抛出异常。</p>

<p>与 PHP 内置的 require 和 include 相比，Q::loadFile()
会多处下列特征：</p>

<ul>
	<li>检查文件名是否包含不安全字符；</li>

	<li>检查文件是否可读；</li>

	<li>文件无法读取时将抛出异常。</li>
</ul>

<pre class="php code">Q<span class="sy0">::</span><span
class="me2">loadFile</span><span class="br0">&#40;</span><span
class="st_h">'my_file.php'</span><span class="sy0">,</span> <span
class="re0">$dirs</span><span class="br0">&#41;</span><span
class="sy0">;</span></pre>
  </div>

    
  <a name="Q_singleton"></a>

  <div class="name method">
    singleton()
    <span class="tags">方法</span>
  </div>

  <table class="list-table">
    <tr>
      <td colspan="3">
        <span class="signature2">
          public static object <strong>singleton</strong>($class_name)        </span>
      </td>
    </tr>

        
    <tr>
      <td class="param_name">$class_name</td>
      <td class="param_type">string</td>
      <td class="param_desc">要获取的对象的类名字</td>
    </tr>
    
    <tr>
      <td class="param_name">{return}</td>
      <td class="param_type">object</td>
      <td class="param_desc">返回对象实例</td>
    </tr>
    
  </table>

  <div class="formatted">
    
<p>返回指定对象的唯一实例</p>

<p>Q::singleton() 完成下列工作：</p>

<ul>
	<li>在对象注册表中查找指定类名称的对象实例是否存在；</li>

	<li>如果存在，则返回该对象实例；</li>

	<li>如果不存在，则载入类定义文件，并构造一个对象实例；</li>

	<li>将新构造的对象以类名称作为对象名登记到对象注册表；</li>

	<li>返回新构造的对象实例。</li>
</ul>

<p>使用 Q::singleton()
的好处在于多次使用同一个对象时不需要反复构造对象。</p>

<pre class="php code"><span
class="co1">// 在位置 A 处使用对象 My_Object</span>
<span
class="re0">$obj</span> <span class="sy0">=</span> Q<span
class="sy0">::</span><span class="me2">singleton</span><span
class="br0">&#40;</span><span class="st_h">'My_Object'</span><span
class="br0">&#41;</span><span class="sy0">;</span>
<span
class="sy0">...</span>
<span class="sy0">...</span>
<span
class="co1">// 在位置 B 处使用对象 My_Object</span>
<span
class="re0">$obj2</span> <span class="sy0">=</span> Q<span
class="sy0">::</span><span class="me2">singleton</span><span
class="br0">&#40;</span><span class="st_h">'My_Object'</span><span
class="br0">&#41;</span><span class="sy0">;</span>
<span
class="co1">// $obj 和 $obj2 都是指向同一个对象实例，避免了多次构造，提高了性能</span></pre>
  </div>

    
  <a name="Q_register"></a>

  <div class="name method">
    register()
    <span class="tags">方法</span>
  </div>

  <table class="list-table">
    <tr>
      <td colspan="3">
        <span class="signature2">
          public static object <strong>register</strong>($obj, $name, $persistent)        </span>
      </td>
    </tr>

        
    <tr>
      <td class="param_name">$obj</td>
      <td class="param_type">object</td>
      <td class="param_desc">要登记的对象</td>
    </tr>
    
    <tr>
      <td class="param_name">$name</td>
      <td class="param_type">string</td>
      <td class="param_desc">用什么名字登记</td>
    </tr>
    
    <tr>
      <td class="param_name">$persistent</td>
      <td class="param_type">boolean</td>
      <td class="param_desc">是否将对象放入持久化存储区</td>
    </tr>
    
    <tr>
      <td class="param_name">{return}</td>
      <td class="param_type">object</td>
      <td class="param_desc"></td>
    </tr>
    
  </table>

  <div class="formatted">
    
<p>以特定名字在对象注册表中登记一个对象</p>

<p>开发者可以将一个对象登记到对象注册表中，以便在应用程序其他位置使用
Q::registry() 来查询该对象。
登记时，如果没有为对象指定一个名字，则以对象的类名称作为登记名。</p>

<pre class="php code"><span class="co1">// 注册一个对象</span>
Q<span
class="sy0">::</span><span class="me2">register</span><span
class="br0">&#40;</span><span class="kw2">new</span> MyObject<span
class="br0">&#40;</span><span class="br0">&#41;</span><span
class="br0">&#41;</span><span class="sy0">;</span>
<span
class="sy0">.....</span>
<span class="co1">// 稍后取出对象</span>
<span
class="re0">$obj</span> <span class="sy0">=</span> Q<span
class="sy0">::</span><span class="me2">regitry</span><span
class="br0">&#40;</span><span class="st_h">'MyObject'</span><span
class="br0">&#41;</span><span class="sy0">;</span></pre>

<p>当 $persistent 参数为 true 时，对象将被放入持久存储区。
在下一次执行脚本时，可以通过 Q::registry()
取出放入持久存储区的对象，并且无需重新构造对象。</p>

<p>利用这个特性，开发者可以将一些需要大量构造时间的对象放入持久存储区，
从而避免每一次执行脚本都去做对象构造操作。</p>

<p>使用哪一种持久化存储区来保存对象，由设置
object_persistent_provier 决定。
该设置指定一个提供持久化服务的对象名。</p>

<pre class="php code"><span class="kw1">if</span> <span
class="br0">&#40;</span><span class="sy0">!</span>Q<span
class="sy0">::</span><span class="me2">isRegistered</span><span
class="br0">&#40;</span><span class="st_h">'MyObject'</span><span
class="br0">&#41;</span><span class="br0">&#41;</span>
<span
class="br0">&#123;</span>
     Q<span class="sy0">::</span><span
class="me2">registry</span><span class="br0">&#40;</span><span
class="kw2">new</span> MyObject<span class="br0">&#40;</span><span
class="br0">&#41;</span><span class="sy0">,</span> <span
class="st_h">'MyObject'</span><span class="sy0">,</span> <span
class="kw2">true</span><span class="br0">&#41;</span><span
class="sy0">;</span>
<span class="br0">&#125;</span>
<span
class="re0">$app</span> <span class="sy0">=</span> Q<span
class="sy0">::</span><span class="me2">registry</span><span
class="br0">&#40;</span><span class="st_h">'MyObject'</span><span
class="br0">&#41;</span><span class="sy0">;</span></pre>
  </div>

    
  <a name="Q_registry"></a>

  <div class="name method">
    registry()
    <span class="tags">方法</span>
  </div>

  <table class="list-table">
    <tr>
      <td colspan="3">
        <span class="signature2">
          public static object <strong>registry</strong>($name)        </span>
      </td>
    </tr>

        
    <tr>
      <td class="param_name">$name</td>
      <td class="param_type">string</td>
      <td class="param_desc">要查找对象的名字</td>
    </tr>
    
    <tr>
      <td class="param_name">{return}</td>
      <td class="param_type">object</td>
      <td class="param_desc">查找到的对象</td>
    </tr>
    
  </table>

  <div class="formatted">
    
<p>查找指定名字的对象实例，如果指定名字的对象不存在则抛出异常</p>

<pre class="php code"><span class="co1">// 注册一个对象</span>
Q<span
class="sy0">::</span><span class="me2">register</span><span
class="br0">&#40;</span><span class="kw2">new</span> MyObject<span
class="br0">&#40;</span><span class="br0">&#41;</span><span
class="sy0">,</span> <span class="st_h">'obj1'</span><span
class="br0">&#41;</span><span class="sy0">;</span>
<span
class="sy0">.....</span>
<span class="co1">// 稍后取出对象</span>
<span
class="re0">$obj</span> <span class="sy0">=</span> Q<span
class="sy0">::</span><span class="me2">regitry</span><span
class="br0">&#40;</span><span class="st_h">'obj1'</span><span
class="br0">&#41;</span><span class="sy0">;</span></pre>
  </div>

    
  <a name="Q_isRegistered"></a>

  <div class="name method">
    isRegistered()
    <span class="tags">方法</span>
  </div>

  <table class="list-table">
    <tr>
      <td colspan="3">
        <span class="signature2">
          public static boolean <strong>isRegistered</strong>($name)        </span>
      </td>
    </tr>

        
    <tr>
      <td class="param_name">$name</td>
      <td class="param_type">string</td>
      <td class="param_desc">要检查的对象名字</td>
    </tr>
    
    <tr>
      <td class="param_name">{return}</td>
      <td class="param_type">boolean</td>
      <td class="param_desc">对象是否已经登记</td>
    </tr>
    
  </table>

  <div class="formatted">
    
<p>检查指定名字的对象是否已经注册</p>
  </div>

    
  <a name="Q_cache"></a>

  <div class="name method">
    cache()
    <span class="tags">方法</span>
  </div>

  <table class="list-table">
    <tr>
      <td colspan="3">
        <span class="signature2">
          public static mixed <strong>cache</strong>($id, $policy, $backend_class)        </span>
      </td>
    </tr>

        
    <tr>
      <td class="param_name">$id</td>
      <td class="param_type">string</td>
      <td class="param_desc">缓存的 ID</td>
    </tr>
    
    <tr>
      <td class="param_name">$policy</td>
      <td class="param_type">array</td>
      <td class="param_desc">缓存策略</td>
    </tr>
    
    <tr>
      <td class="param_name">$backend_class</td>
      <td class="param_type">string</td>
      <td class="param_desc">要使用的缓存服务</td>
    </tr>
    
    <tr>
      <td class="param_name">{return}</td>
      <td class="param_type">mixed</td>
      <td class="param_desc">成功返回缓存内容，失败返回 false</td>
    </tr>
    
  </table>

  <div class="formatted">
    
<p>读取指定的缓存内容，如果内容不存在或已经失效，则返回
false</p>

<p>在操作缓存数据时，必须指定缓存的
ID。每一个缓存内容都有一个唯一的 ID。 例如数据 A 的缓存
ID 是 data-a，而数据 B 的缓存 ID 是 data-b。</p>

<p>在大量使用缓存时，应该采用一定的规则来确定缓存
ID。下面是一个推荐的方案：</p>

<ul>
	<li>首先按照缓存数据的性质确定前缀，例如 page、db 等；</li>

	<li>然后按照数据的唯一索引来确定后缀，并和前缀一起组合成完整的缓存
	ID。</li>
</ul>

<p>按照这个规则，缓存 ID 看上去类似
page.news.1、db.members.userid。</p>

<p>Q::cache() 可以指定 $policy
参数来覆盖缓存数据本身带有的策略。
具体哪些策略可以使用，请参考不同缓存服务的文档。</p>

<p>$backend_class 用于指定要使用的缓存服务对象类名称。例如
QCache_File、QCache_APC 等。</p>

<pre class="php code"><span class="re0">$data</span> <span
class="sy0">=</span> Q<span class="sy0">::</span><span
class="me2">cache</span><span class="br0">&#40;</span><span
class="re0">$cache_id</span><span class="br0">&#41;</span><span
class="sy0">;</span>
<span class="kw1">if</span> <span
class="br0">&#40;</span><span class="re0">$data</span> <span
class="sy0">===</span> <span class="kw2">false</span><span
class="br0">&#41;</span>
<span class="br0">&#123;</span>
    <span
class="re0">$data</span> <span class="sy0">=</span> <span
class="sy0">....</span>
    Q<span class="sy0">::</span><span
class="me2">writeCache</span><span class="br0">&#40;</span><span
class="re0">$cache_id</span><span class="sy0">,</span> <span
class="re0">$data</span><span class="br0">&#41;</span><span
class="sy0">;</span>
<span class="br0">&#125;</span></pre>
  </div>

    
  <a name="Q_writeCache"></a>

  <div class="name method">
    writeCache()
    <span class="tags">方法</span>
  </div>

  <table class="list-table">
    <tr>
      <td colspan="3">
        <span class="signature2">
          public static void <strong>writeCache</strong>($id, $data, $policy, $backend_class)        </span>
      </td>
    </tr>

        
    <tr>
      <td class="param_name">$id</td>
      <td class="param_type">string</td>
      <td class="param_desc">缓存的 ID</td>
    </tr>
    
    <tr>
      <td class="param_name">$data</td>
      <td class="param_type">mixed</td>
      <td class="param_desc">要缓存的数据</td>
    </tr>
    
    <tr>
      <td class="param_name">$policy</td>
      <td class="param_type">array</td>
      <td class="param_desc">缓存策略</td>
    </tr>
    
    <tr>
      <td class="param_name">$backend_class</td>
      <td class="param_type">string</td>
      <td class="param_desc">要使用的缓存服务</td>
    </tr>
    
    <tr>
      <td class="param_name">{return}</td>
      <td class="param_type"></td>
      <td class="param_desc"></td>
    </tr>
    
  </table>

  <div class="formatted">
    
<p>将变量内容写入缓存，失败抛出异常</p>

<p>$data 参数指定要缓存的内容。如果 $data
参数不是一个字符串，则必须将缓存策略 serialize 设置为
true。 $policy
参数指定了内容的缓存策略，如果没有提供该参数，则使用缓存服务的默认策略。</p>

<p>其他参数同 Q::cache()。</p>
  </div>

    
  <a name="Q_cleanCache"></a>

  <div class="name method">
    cleanCache()
    <span class="tags">方法</span>
  </div>

  <table class="list-table">
    <tr>
      <td colspan="3">
        <span class="signature2">
          public static void <strong>cleanCache</strong>($id, $policy, $backend_class)        </span>
      </td>
    </tr>

        
    <tr>
      <td class="param_name">$id</td>
      <td class="param_type">string</td>
      <td class="param_desc">缓存的 ID</td>
    </tr>
    
    <tr>
      <td class="param_name">$policy</td>
      <td class="param_type">array</td>
      <td class="param_desc">缓存策略</td>
    </tr>
    
    <tr>
      <td class="param_name">$backend_class</td>
      <td class="param_type">string</td>
      <td class="param_desc">要使用的缓存服务</td>
    </tr>
    
    <tr>
      <td class="param_name">{return}</td>
      <td class="param_type"></td>
      <td class="param_desc"></td>
    </tr>
    
  </table>

  <div class="formatted">
    
<p>删除指定的缓存内容</p>

<p>通常，失效的缓存数据无需清理。但有时候，希望在某些操作完成后立即清除缓存。
例如更新数据库记录后，希望删除该记录的缓存文件，以便在下一次读取缓存时重新生成缓存文件。</p>

<pre class="php code">Q<span class="sy0">::</span><span
class="me2">cleanCache</span><span class="br0">&#40;</span><span
class="re0">$cache_id</span><span class="br0">&#41;</span><span
class="sy0">;</span></pre>
  </div>

    
  <a name="Q_normalize"></a>

  <div class="name method">
    normalize()
    <span class="tags">方法</span>
  </div>

  <table class="list-table">
    <tr>
      <td colspan="3">
        <span class="signature2">
          public static array <strong>normalize</strong>($input, $delimiter)        </span>
      </td>
    </tr>

        
    <tr>
      <td class="param_name">$input</td>
      <td class="param_type">array|string</td>
      <td class="param_desc">要格式化的字符串或数组</td>
    </tr>
    
    <tr>
      <td class="param_name">$delimiter</td>
      <td class="param_type">string</td>
      <td class="param_desc">按照什么字符进行分割</td>
    </tr>
    
    <tr>
      <td class="param_name">{return}</td>
      <td class="param_type">array</td>
      <td class="param_desc">格式化结果</td>
    </tr>
    
  </table>

  <div class="formatted">
    
<p>对字符串或数组进行格式化，返回格式化后的数组</p>

<p>$input
参数如果是字符串，则首先以“,”为分隔符，将字符串转换为一个数组。
接下来对数组中每一个项目使用 trim()
方法去掉首尾的空白字符。最后过滤掉空字符串项目。</p>

<p>该方法的主要用途是将诸如：“item1, item2, item3”
这样的字符串转换为数组。</p>

<pre class="php code"><span class="re0">$input</span> <span
class="sy0">=</span> <span class="st_h">'item1, item2, item3'</span><span
class="sy0">;</span>
<span class="re0">$output</span> <span
class="sy0">=</span> Q<span class="sy0">::</span><span
class="me2">normalize</span><span class="br0">&#40;</span><span
class="re0">$input</span><span class="br0">&#41;</span><span
class="sy0">;</span>
<span
class="co1">// $output 现在是一个数组，结果如下：</span>
<span
class="co1">// $output = array(</span>
<span
class="co1">//   'item1',</span>
<span class="co1">//   'item2',</span>
<span
class="co1">//   'item3',</span>
<span class="co1">// );</span>
&nbsp;
<span
class="re0">$input</span> <span class="sy0">=</span> <span
class="st_h">'item1|item2|item3'</span><span class="sy0">;</span>
<span
class="co1">// 指定使用什么字符作为分割符</span>
<span
class="re0">$output</span> <span class="sy0">=</span> Q<span
class="sy0">::</span><span class="me2">normalize</span><span
class="br0">&#40;</span><span class="re0">$input</span><span
class="sy0">,</span> <span class="st_h">'|'</span><span
class="br0">&#41;</span><span class="sy0">;</span></pre>
  </div>

    
  <a name="Q_control"></a>

  <div class="name method">
    control()
    <span class="tags">方法</span>
  </div>

  <table class="list-table">
    <tr>
      <td colspan="3">
        <span class="signature2">
          public static QUI_Control_Abstract <strong>control</strong>($type, $id, $attrs)        </span>
      </td>
    </tr>

        
    <tr>
      <td class="param_name">$type</td>
      <td class="param_type">string</td>
      <td class="param_desc">用户界面控件对象的类型</td>
    </tr>
    
    <tr>
      <td class="param_name">$id</td>
      <td class="param_type">string</td>
      <td class="param_desc">控件ID</td>
    </tr>
    
    <tr>
      <td class="param_name">$attrs</td>
      <td class="param_type">array</td>
      <td class="param_desc">要传递给控件的附加属性</td>
    </tr>
    
    <tr>
      <td class="param_name">{return}</td>
      <td class="param_type">QUI_Control_Abstract</td>
      <td class="param_desc">创建的用户界面控件对象</td>
    </tr>
    
  </table>

  <div class="formatted">
    
<p>创建一个用户界面控件对象</p>

<p>使用 Q::control()
方法，可以很容易的创建指定类型的用户界面控件对象。</p>
  </div>

    
  <a name="Q_autoload"></a>

  <div class="name method">
    autoload()
    <span class="tags">方法</span>
  </div>

  <table class="list-table">
    <tr>
      <td colspan="3">
        <span class="signature2">
          public static void <strong>autoload</strong>($class_name)        </span>
      </td>
    </tr>

        
    <tr>
      <td class="param_name">$class_name</td>
      <td class="param_type">string</td>
      <td class="param_desc"></td>
    </tr>
    
    <tr>
      <td class="param_name">{return}</td>
      <td class="param_type"></td>
      <td class="param_desc"></td>
    </tr>
    
  </table>

  <div class="formatted">
    
<p>用于 QeePHP 的类自动载入，不需要由开发者调用</p>
  </div>

    
  <a name="Q_registerAutoload"></a>

  <div class="name method">
    registerAutoload()
    <span class="tags">方法</span>
  </div>

  <table class="list-table">
    <tr>
      <td colspan="3">
        <span class="signature2">
          public static void <strong>registerAutoload</strong>($class, $enabled)        </span>
      </td>
    </tr>

        
    <tr>
      <td class="param_name">$class</td>
      <td class="param_type">string</td>
      <td class="param_desc">提供自动载入服务的类</td>
    </tr>
    
    <tr>
      <td class="param_name">$enabled</td>
      <td class="param_type">boolean</td>
      <td class="param_desc">启用或禁用该服务</td>
    </tr>
    
    <tr>
      <td class="param_name">{return}</td>
      <td class="param_type"></td>
      <td class="param_desc"></td>
    </tr>
    
  </table>

  <div class="formatted">
    
<p>注册或取消注册一个自动类载入方法</p>

<p>该方法参考 Zend Framework。</p>
  </div>

  
</div>


</div>


    </div>

    <!-- /右侧栏 -->


<div id="google-adsense-block720" style="margin: 10px auto 20px auto; width: 730px; height: 90px;"></div>


  </div>
</div>
<!-- /core -->

<!-- footer -->
<div id="footer">
  <div id="breadcrumbs">
    <p>
      <a href="index.htm" tppabs="http://qeephp.com/">返回首页</a>
      &nbsp;&nbsp;
      <a href="projects.htm" tppabs="http://qeephp.com/projects">开源项目与插件</a>
      &nbsp;&nbsp;
      <a href="cases.htm" tppabs="http://qeephp.com/cases">应用展示</a>
      &nbsp;&nbsp;
      <a href="framework.htm" tppabs="http://qeephp.com/framework">框架</a>
      &nbsp;&nbsp;
      <a href="docs.htm" tppabs="http://qeephp.com/docs">文档</a>
      &nbsp;&nbsp;
      <a href="index-1.htm" tppabs="http://qeephp.com/bbs/">论坛</a>
    </p>
  </div>
</div>
<!-- /footer -->

</div>
<!-- /page-wrapper -->

</body>
